import java.util.ArrayList;
import java.util.Arrays;

public class Main {


    public static void main(String[] args) {


//        Дана некоторая строка с буквами и цифрами. Получите позицию первой цифры в этой строке.


//        String str = "ugh5jkk90fifty653";
//        int count = 0;
//        int position = -1;
//
//        for (int i = 0; i < str.length(); i++) {
//            if (Character.isDigit(str.charAt(i))) {
//                position = i;
//                break;
//            }
//        }
//        // Выводим позицию первой цифры (если найдена)
//        if (position != -1) {
//            System.out.println("Позиция первой цифры: " + position);
//        } else {
//            System.out.println("Цифры не найдены в строке.");
//        }
//        ==================================================================================================================

//        Напишите программу, которая сформирует следующую строку: "xxxxx"

//        int length = 5; // Длина строки
//        StringBuilder result = new StringBuilder(); // Создаем объект StringBuilder для формирования строки
//
//        // Добавляем символ 'x' в строку указанное количество раз
//        for (int i = 0; i < length; i++) {
//            result.append('x');
//        }
//
//        String finalString = result.toString(); // Преобразуем StringBuilder в String
//
//        System.out.println(finalString); // Выводим полученную строку

//        ===================================================================================================================
//
//        Дан массив:
//
//         int[] {1, 0, 2, 3, 0, 5}
//        Удалите из массива все нули и запишите результат в новый массив:
//
//         int[] {1, 2, 3, 5}


//        int[] array = {1, 0, 2, 3, 0, 5};
//
//        // Определяем количество ненулевых элементов в массиве
//        int countNonZero = 0;
//        for (int i = 0; i < array.length; i++) {
//            if (array[i] != 0) {
//                countNonZero++;
//            }
//        }

        // Создаем новый массив с размером, равным количеству ненулевых элементов
//        int[] newArray = new int[countNonZero];
//
//        // Заполняем новый массив ненулевыми элементами
//        int index = 0;
//        for (int i = 0; i < array.length; i++) {
//            if (array[i] != 0) {
//                newArray[index++] = array[i];
//            }
//        }
//
//        // Выводим новый массив
//        System.out.println("Новый массив после удаления нулей: " + Arrays.toString(newArray));

//        ===========================================================================================================================

//  Уровень 4.2 задачника Java

//        Выведите в консоль все числа в промежутке от 10 до 1000, у которых первая цифра четная.

//          for (int i = 10; i < 1000; i++) {
//              // Получаем первую цифру числа
//              int firstDigit = Integer.parseInt(Integer.toString(i).substring(0, 1));
//              // Проверяем, является ли первая цифра четной
//              if (firstDigit % 2 == 0) {
//                  System.out.println(i); // Выводим число
//              }
//          }
//======================================================================================================================

//             Дано целое число:
//             int num = 12345;
//             Выведите в консоль количество четных цифр в этом числе.

//               int num = 12345;
//               int count = 0;
//               while (num > 0) {
//                  int digit = num % 10;
//                      if (digit % 2 == 0) {
//                              count++;
//                   }
//                         num = num /10;
//
//
//               }
//                    System.out.println("Колличество четных цифр в числе '12345' - "  + count)

//        ==============================================================================================================

//        Дано целое число:
//        int num = 12;
//        Выведите в консоль все делители этого числа.

//           int num = 12;
//
//              System.out.println("Делители числа " + num + ":");
//
//            // Перебираем числа от 1 до num
//            for (int i = 1; i <= num; i++) {
//            // Если i является делителем числа num
//            if (num % i == 0) {
//                System.out.println(i); // Выводим делитель в консоль
//            }
//        }
// ==============================================================================================================

//        Даны два массива:
//
//        int[] arr1 = [1, 2, 3, 4, 5];
//        int[] arr2 = [1, 2, 3];
//        Проверьте, что все элементы первого массива есть во втором.

//        int[] arr1 = {1, 2, 3, 4, 5};
//
//        int[] arr2 = {1, 2, 3};
//
//        for (int i = 0; i < arr2.length; i++) {
//
//            if (arr1[i] == arr2[i]) {
//                break;
//            } else {
//                System.out.println("В первом массиве нет элементов второго массива");
//            }
//        }
//
//        System.out.println("Все елементы первого массива " + Arrays.toString(arr1) + " есть во втором массиве " + Arrays.toString(arr2));

//        =========================================================================================================================================

//          Дано целое число:
//          int num = 12345;
//          Поменяйте местами первую и последнюю цифру этого числа:
//          int 52341

//        int num = 12345; // Заданное целое число
//
//        // Переводим число в строку
//        String numStr = Integer.toString(num);
//
//        // Проверяем, что число состоит как минимум из двух цифр
//        if (numStr.length() >= 2) {
//            // Получаем первую и последнюю цифры
//            char firstDigit = numStr.charAt(0);
//            char lastDigit = numStr.charAt(numStr.length() - 1);
//
//            // Строим новое число с поменянными местами первой и последней цифрами
//            StringBuilder reversedNumStr = new StringBuilder();
//            reversedNumStr.append(lastDigit);
//            for (int i = 1; i < numStr.length() - 1; i++) {
//                reversedNumStr.append(numStr.charAt(i));
//            }
//            reversedNumStr.append(firstDigit);
//
//            // Парсим строку обратно в целое число
//            int reversedNum = Integer.parseInt(reversedNumStr.toString());
//
//            System.out.println("Исходное число: " + num);
//            System.out.println("Число с поменяными местами первой и последней цифрами: " + reversedNum);
//        } else {
//            System.out.println("Число должно состоять как минимум из двух цифр");

//        }
//========================================================================================================================
        // Уровень 4.3 задачника Java


//        Выведите в консоль все числа в промежутке от 10 до 1000, у которых предпоследняя цифра четная.

//        for (int i = 10; i < 1000; i++) {
//            int penultimateDigit = (i / 10) % 10;
//            // Проверяем, является ли предпоследняя цифра четной
//            if (penultimateDigit % 2 == 0) {
//                System.out.println(i); // Выводим число
//            }
//        }
//        =====================================================================================================

//       Напишите программу, которая сформирует следующую строку:
//
//         "123456789"

//        StringBuilder stringBuilder = new StringBuilder();
//
//        for (int i = 1; i <= 9; i++) {
//            stringBuilder.append(i);
//        }
//
//        String result = stringBuilder.toString();
//        System.out.println(result);
//        =============================================================================================================
//        Даны два целых числа:
//
//       int num1 = 12;
//       int num2 = 16;
//       Выведите в консоль общие делители этих чисел.
//        int num1 = 12;
//        int num2 = 16;
//
//
//        System.out.println("Общие делители чисел " + num1 + " и " + num2 + ":");
//
//        // Находим максимальное из двух чисел
//        int maxNumber = Math.max(num1, num2);
//
//        // Перебираем числа от 1 до максимального из двух
//        for (int i = 1; i <= maxNumber; i++) {
//            // Проверяем, является ли текущее число делителем обоих чисел
//            if (num1 % i == 0 && num2 % i == 0) {
//                System.out.println(i); // Выводим делитель
//            }
//        }
//        ===============================================================================================================

//        Дана строка с целыми числами, разделенными пробелами:
//
//        String str = "123 456 789";
//        Найдите сумму чисел из этой строки.

//        String str = "123 456 789";
//
//        // Разделяем строку на массив строк по пробелам
//        String[] numbers = str.split(" ");
//        for (String num : numbers)
//        System.out.println(num);
//
//        int sum = 0;
//
//        // Проходим по каждому элементу массива
//        for (String num : numbers) {
//            // Преобразуем строку в целое число и добавляем к сумме
//            sum += Integer.parseInt(num);
//        }
//
//        System.out.println("Сумма чисел из строки: " + sum);
// =======================================================================================================================
//        Дана строка со словами:
//
//        String str = "word1 word2 word3";
//        Получите первые N слов из этой строки.

//        String str = "word1 word2 word3";
//        int N = 2; // Количество слов, которые вы хотите получить
//
//        // Разделяем строку на массив слов по пробелам
//        String[] words = str.split(" ");
//
//        // Проверяем, что N не превышает общее количество слов в строке
//        if (N > words.length) {
//            System.out.println("Ошибка: N превышает общее количество слов в строке.");
//            return;
//        }
//
//        // Формируем новую строку, содержащую первые N слов
//        StringBuilder result = new StringBuilder();
//        for (int i = 0; i < N; i++) {
//            result.append(words[i]).append(" ");
//        }
//
//        System.out.println("Первые " + N + " слов из строки: " + result.toString().trim());
    }
}





























